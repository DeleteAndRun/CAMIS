---
title: "Estimating Cumulative Incidence Functions Using R"
---

## Objective

In this document we present how to estimate the cumulative incidence function (CIF) in R. We focus on the competing risks model where each subject experiences only one out of *k* possible events as depicted in the figure below.

```{r, echo=FALSE, fig.align='center', out.width="25%"}
knitr::include_graphics("../images/survival_competing_risks/cr.jpg")
```

## R Packages for Estimating CIFs

We identify three packages:

-   `cmprsk` version 2.2-12, release date 2024-05-14

-   `tidycmprsk` version 1.0.0, release date 2023-10-30

-   `survival` version 3.7-0, release date 2024-06-01

The `cmprsk` package implements the methods described in Gray (1988) for testing CIFs across different groups. The `tidycmprsk` package is a wrapper for `cmprsk`. It uses syntax similar to other survival analysis packages, and also returns `survival` objects. In this document, we illustrate how to use the `tidycmprsk` package for estimating and testing CIFs. More details and other functionalities can be found [here](https://mskcc-epi-bio.github.io/tidycmprsk/ "tidycmprsk").

The `survival` package is a general purpose survival analysis package. Its scope is far beyond the competing risks model. We will demonstrate how to estimate and test the CIFs using this package.

### Data used

The bone marrow transplant (BTM) dataset as presented by Guo & So (2018) is used. The dataset has the following variables:

-   `Group` has three levels, indicating three disease groups.

-   `T` is the disease-free survival time in days. A derived variable `TYears = T/365.25` is used in the analysis.

-   `Status` has value 0 if `T` is censored; 1 if `T` is time to relapse; 2 if `T` is time to death.

-   `WaitTime` is the waiting time to transplant in days. A log transformation is applied to stabilize the large variation.

```{r readdata, message=FALSE, warning=FALSE}
require(dplyr)
bmt <- read.delim(file.path("../data/bmt.txt")) %>%
  ##read.delim(paste0(getwd(), "/data/bmt.txt")) %>%
  mutate(
    Group = factor(Group, 
                   levels = c(1, 2, 3), 
                   labels = c('ALL', 'AML-Low Risk', 'AML-High Risk')
    ),
    Status = factor(Status,
                    levels = c(0, 1, 2),
                    labels = c('Censored', 'Relapse', 'Death')),
    TYears = T / 365.25,
    logWaitTime = log(WaitTime),
    ID = row_number()
  )
```

## Estimating CIFs

### The `tidycmprsk` Package

#### CIF Estimates and Gray's Test

The `cuminc{tidycmprsk}` function uses the same syntax as in many survival analysis packages. Therefore, it follows that censoring needs to be the first level in the event status indicator (here `Status`).

```{r cr.est, message=FALSE, warning=FALSE}
require(survival)
require(tidycmprsk)
##
cif.1 <- cuminc(Surv(TYears, Status) ~ Group, data = bmt) 
##
cif.1 %>% 
  tidy(
    outcome = c('Death', 'Relapse'),
    times = c(0.5, 1, 1.5, 2, 3, 4)
  )
cif.1 %>% 
  tbl_cuminc(
    times = c(0.5, 1, 1.5, 2, 3, 4),
    outcome = c('Death', 'Relapse')
  ) %>%
  add_p()
```

Two points to note:

1.   The current version of `cmprsk`, and hence `tidycmprsk,` estimates the variance of the CIF estimates asymptotically as in Aalen (1978). There is no option to change it to other methods.

2.  `cuminc{tidycmprsk`} offers pointwise CIs for the CIF estimates using the log-log transforms. There is no other options. No CIs are computed for the CIFs by `cuminc{cmprsk}`.

#### CIF Plots

```{r cr.plot, message=FALSE,warning=FALSE}
require(ggsurvfit)
cif.1 %>%
  ggcuminc(outcome = 'Death') +
  add_confidence_interval() +
  add_risktable() +
  xlab('Time (years) to death')
cif.1 %>%
  ggcuminc(outcome = 'Relapse') +
  add_confidence_interval() +
  add_risktable() +
  xlab('Time (years) to relapse')
```

### The `survival` Package

Using the bone marrow transplant example, the following code shows how to estimate the CIF for time to relapse:

```{r surv.est, message=FALSE, warning=FALSE}

```

Using `survfit()`, the variances can only be estimated using the robust sandwich(???) method. The CIs, therefore, are slightly different from that estimated based on Aalen's or the delta method.

## Summary

Both `survfit{survival}` and `cuminc{cmprsk}` (and by extension `cuminc{tidycmprsk}`) implement Aalen-Johansen estimator. They result in identical estimates as what SAS PROC LIFETEST produces.

The results given by `cuminc{tidycmprsk}` are identical to what SAS PROC LIFETEST produces since the same methods are implemented. Certain options in SAS, e.g., the delta method for variance estimation or other ways of calculating the CIs, are not available in `cuminc{tidycmprsk}` at the moment. However, the outputs contain enough information that these options can be manually implemented by users. For example, Pintilie (2006) provides R code for deriving the variances for the estimated CIFs based on the delta method.

## Reference

Aalen O. (1978). Nonparametric estimation of partial transition probabilities in multiple decrement models, ANNALS OF STATISTICS, 6:534-545.

Gray R. (1988).

Guo C and So Y. (2018). "Cause-specific analysis of competing risks using the PHREG procedure." In Proceedings of the SAS Global Forum 2018 Conference. Cary, NC: SAS Institute Inc. https://support.sas.com/resources/papers/proceedings18/2159-2018.pdf.

Package 'cmprsk' vignettes: https://cran.r-project.org/web/packages/cmprsk/cmprsk.pdf

Pintilie M. (2006). [**https://doi.org/10.1002/9780470870709.app2**](https://doi.org/10.1002/9780470870709.app2)

https://onlinelibrary.wiley.com/doi/10.1002/9780470870709.app2

Sjoberg DD and Fei T. (2023). tidycmprsk: Competing Risks Estimation. https://github.com/MSKCC-Epi-Bio/tidycmprsk
